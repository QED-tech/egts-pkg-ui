services:
  migrator:
    build:
      context: ../backend
      dockerfile: ./../infra/playground/migrator/Dockerfile
    environment:
      GOOSE_DRIVER: ${GOOSE_DRIVER}
      GOOSE_DBSTRING: ${GOOSE_DBSTRING}
      GOOSE_MIGRATION_DIR: ${GOOSE_MIGRATION_DIR}
    volumes:
      - ../backend/migrations:/app/migrations
    depends_on:
      db:
        condition: service_healthy
    command: "goose up"

  backend:
    build:
      context: ../backend
      dockerfile: ./../infra/playground/backend/Dockerfile
      target: final
    ports:
      - 9090:9090
    depends_on:
      db:
        condition: service_healthy

  frontend:
    build:
      context: ../frontend
      dockerfile: ./../infra/playground/frontend/Dockerfile
    environment:
      NODE_ENV: production
    ports:
      - 3000:3000
    volumes:
      - ../frontend:/app
      - /app/node_modules
    depends_on:
      - backend

  db:
    image: postgres
    restart: always
    user: postgres
    volumes:
      - db-data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - 5432:5432
    healthcheck:
      test: ["CMD", "pg_isready"]
      interval: 10s
      timeout: 5s
      retries: 5
volumes:
  db-data:
